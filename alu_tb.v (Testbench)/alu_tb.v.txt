`timescale 1ns/1ps
module alu_tb;

    reg [7:0] A, B;
    reg [2:0] OP;
    wire [7:0] Result;
    wire Zero;

    alu uut (
        .A(A), .B(B), .OP(OP), .Result(Result), .Zero(Zero)
    );

    initial begin
        $display("Starting ALU Testbench");
        A = 8'd15; B = 8'd10;

        OP = 3'b000; #10;  // ADD
        $display("ADD: %d + %d = %d", A, B, Result);

        OP = 3'b001; #10;  // SUB
        $display("SUB: %d - %d = %d", A, B, Result);

        OP = 3'b010; #10;  // AND
        $display("AND: %b & %b = %b", A, B, Result);

        OP = 3'b011; #10;  // OR
        $display("OR : %b | %b = %b", A, B, Result);

        OP = 3'b100; #10;  // XOR
        $display("XOR: %b ^ %b = %b", A, B, Result);

        OP = 3'b101; #10;  // NOT
        $display("NOT: ~%b = %b", A, Result);

        OP = 3'b110; #10;  // Shift Left
        $display("SHL: %b << 1 = %b", A, Result);

        OP = 3'b111; #10;  // Shift Right
        $display("SHR: %b >> 1 = %b", A, Result);

        $finish;
    end

endmodule
